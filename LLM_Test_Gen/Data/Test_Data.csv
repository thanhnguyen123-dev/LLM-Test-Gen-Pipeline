"FQN","Signature","Jimple Code Representation","Method Modifiers","Annotations","Java Doc","Class Context","Class Fields","Loop Count","Branch Count"
"org.apache.commons.lang3.CharRange.hashCode()","int hashCode()","{
    org.apache.commons.lang3.CharRange this;
    unknown $stack1, $stack2, $stack3, $stack4, $stack5, $stack6, $stack7, $stack8;


    this := @this: org.apache.commons.lang3.CharRange;
    $stack1 = this.<org.apache.commons.lang3.CharRange: char start>;
    $stack4 = 83 + $stack1;
    $stack2 = this.<org.apache.commons.lang3.CharRange: char end>;
    $stack3 = 7 * $stack2;
    $stack6 = $stack4 + $stack3;
    $stack5 = this.<org.apache.commons.lang3.CharRange: boolean negated>;

    if $stack5 == 0 goto label1;
    $stack8 = 1;

    goto label2;

  label1:
    $stack8 = 0;

  label2:
    $stack7 = $stack6 + $stack8;

    return $stack7;
}
","PUBLIC","Override","<p>Gets a hashCode compatible with the equals method.</p>
@return a suitable hashCode","implements java.lang.Iterable","PRIVATE TRANSIENT java.lang.String iToString; PRIVATE STATIC FINAL long serialVersionUID; PRIVATE FINAL char end; PRIVATE FINAL char start; PRIVATE FINAL boolean negated","0","0"
"org.apache.commons.lang3.CharRange.isNegated()","boolean isNegated()","{
    org.apache.commons.lang3.CharRange this;
    unknown $stack1;


    this := @this: org.apache.commons.lang3.CharRange;
    $stack1 = this.<org.apache.commons.lang3.CharRange: boolean negated>;

    return $stack1;
}
","PUBLIC","","<p>Is this {@code CharRange} negated.</p>

<p>A negated range includes everything except that defined by the
start and end characters.</p>
@return {@code true} if negated","implements java.lang.Iterable","PRIVATE TRANSIENT java.lang.String iToString; PRIVATE STATIC FINAL long serialVersionUID; PRIVATE FINAL char end; PRIVATE FINAL char start; PRIVATE FINAL boolean negated","0","0"
"org.apache.commons.lang3.CharRange.equals(java.lang.Object)","boolean equals(java.lang.Object)","{
    java.lang.Object obj;
    org.apache.commons.lang3.CharRange this;
    unknown $stack10, $stack3, $stack4, $stack5, $stack6, $stack7, $stack8, $stack9, other;


    this := @this: org.apache.commons.lang3.CharRange;
    obj := @parameter0: java.lang.Object;

    if obj != this goto label1;

    return 1;

  label1:
    $stack3 = obj instanceof org.apache.commons.lang3.CharRange;

    if $stack3 != 0 goto label2;

    return 0;

  label2:
    other = (org.apache.commons.lang3.CharRange) obj;
    $stack5 = this.<org.apache.commons.lang3.CharRange: char start>;
    $stack4 = other.<org.apache.commons.lang3.CharRange: char start>;

    if $stack5 != $stack4 goto label3;
    $stack7 = this.<org.apache.commons.lang3.CharRange: char end>;
    $stack6 = other.<org.apache.commons.lang3.CharRange: char end>;

    if $stack7 != $stack6 goto label3;
    $stack10 = this.<org.apache.commons.lang3.CharRange: boolean negated>;
    $stack9 = other.<org.apache.commons.lang3.CharRange: boolean negated>;

    if $stack10 != $stack9 goto label3;

    return 1;

  label3:
    $stack8 = 0;

    return $stack8;
}
","PUBLIC","Override","<p>Compares two CharRange objects, returning true if they represent
exactly the same range of characters defined in the same way.</p>
@param obj the object to compare to
@return true if equal","implements java.lang.Iterable","PRIVATE TRANSIENT java.lang.String iToString; PRIVATE STATIC FINAL long serialVersionUID; PRIVATE FINAL char end; PRIVATE FINAL char start; PRIVATE FINAL boolean negated","0","2"
"org.apache.commons.lang3.CharRange.is(char)","org.apache.commons.lang3.CharRange is(char)","{
    char ch;
    unknown $stack1;


    ch := @parameter0: char;
    $stack1 = new org.apache.commons.lang3.CharRange;
    specialinvoke $stack1.<org.apache.commons.lang3.CharRange: void <init>(char,char,boolean)>(ch, ch, 0);

    return $stack1;
}
","PUBLIC STATIC","","<p>Constructs a {@code CharRange} over a single character.</p>
@param ch only character in this range
@return the new CharRange object
@see CharRange#CharRange(char, char, boolean)
@since 2.5","implements java.lang.Iterable","PRIVATE TRANSIENT java.lang.String iToString; PRIVATE STATIC FINAL long serialVersionUID; PRIVATE FINAL char end; PRIVATE FINAL char start; PRIVATE FINAL boolean negated","0","0"
"org.apache.commons.lang3.CharRange.isIn(char, char)","org.apache.commons.lang3.CharRange isIn(char, char)","{
    char end, start;
    unknown $stack2;


    start := @parameter0: char;
    end := @parameter1: char;
    $stack2 = new org.apache.commons.lang3.CharRange;
    specialinvoke $stack2.<org.apache.commons.lang3.CharRange: void <init>(char,char,boolean)>(start, end, 0);

    return $stack2;
}
","PUBLIC STATIC","","<p>Constructs a {@code CharRange} over a set of characters.</p>
@param start first character, inclusive, in this range
@param end last character, inclusive, in this range
@return the new CharRange object
@see CharRange#CharRange(char, char, boolean)
@since 2.5","implements java.lang.Iterable","PRIVATE TRANSIENT java.lang.String iToString; PRIVATE STATIC FINAL long serialVersionUID; PRIVATE FINAL char end; PRIVATE FINAL char start; PRIVATE FINAL boolean negated","0","0"
"org.apache.commons.lang3.CharRange.getStart()","char getStart()","{
    org.apache.commons.lang3.CharRange this;
    unknown $stack1;


    this := @this: org.apache.commons.lang3.CharRange;
    $stack1 = this.<org.apache.commons.lang3.CharRange: char start>;

    return $stack1;
}
","PUBLIC","","<p>Gets the start character for this character range.</p>
@return the start char (inclusive)","implements java.lang.Iterable","PRIVATE TRANSIENT java.lang.String iToString; PRIVATE STATIC FINAL long serialVersionUID; PRIVATE FINAL char end; PRIVATE FINAL char start; PRIVATE FINAL boolean negated","0","0"
"org.apache.commons.lang3.CharRange.isNot(char)","org.apache.commons.lang3.CharRange isNot(char)","{
    char ch;
    unknown $stack1;


    ch := @parameter0: char;
    $stack1 = new org.apache.commons.lang3.CharRange;
    specialinvoke $stack1.<org.apache.commons.lang3.CharRange: void <init>(char,char,boolean)>(ch, ch, 1);

    return $stack1;
}
","PUBLIC STATIC","","<p>Constructs a negated {@code CharRange} over a single character.</p>
@param ch only character in this range
@return the new CharRange object
@see CharRange#CharRange(char, char, boolean)
@since 2.5","implements java.lang.Iterable","PRIVATE TRANSIENT java.lang.String iToString; PRIVATE STATIC FINAL long serialVersionUID; PRIVATE FINAL char end; PRIVATE FINAL char start; PRIVATE FINAL boolean negated","0","0"
"org.apache.commons.lang3.CharRange.isNotIn(char, char)","org.apache.commons.lang3.CharRange isNotIn(char, char)","{
    char end, start;
    unknown $stack2;


    start := @parameter0: char;
    end := @parameter1: char;
    $stack2 = new org.apache.commons.lang3.CharRange;
    specialinvoke $stack2.<org.apache.commons.lang3.CharRange: void <init>(char,char,boolean)>(start, end, 1);

    return $stack2;
}
","PUBLIC STATIC","","<p>Constructs a negated {@code CharRange} over a set of characters.</p>
@param start first character, inclusive, in this range
@param end last character, inclusive, in this range
@return the new CharRange object
@see CharRange#CharRange(char, char, boolean)
@since 2.5","implements java.lang.Iterable","PRIVATE TRANSIENT java.lang.String iToString; PRIVATE STATIC FINAL long serialVersionUID; PRIVATE FINAL char end; PRIVATE FINAL char start; PRIVATE FINAL boolean negated","0","0"
